개요
이미지 정류 및 기본 스테레오 알고리즘에 대한 코드를 구현합니다. 이미지의 일부 쌍과 해당 이미지의 특징점 세트를 제공합니다. 모든 특이 치는 이미 제거됩니다.

태스크:

HW5-a : 베이어 이미지 보간. (bayer_to_rgb_bicubic.m)
HW5-b : 8 점 알고리즘을 사용하여 기본 행렬 찾기 (보조 폴더의 세부 사항은 보충 슬라이드를 확인하십시오). (calculate_fundamental_matrix.m)
HW5-c : 정류를위한 호모 그래피 행렬을 계산하기 위해 세 개의 행렬을 찾습니다 (calculate_rectification_matrix.m).
HW5-d : 정류 된 두 이미지에 대해 NCC (정규화 된 상호 상관) 일치 비용 함수를 사용하여 비용 볼륨을 만든 다음 박스 필터를 사용하여 비용 볼륨에서 불일치 맵을 얻습니다. (calculate_disparity_map.m).

금지 된 기능 : demosaic (), disparity () 등.
유용한 함수 : svd (), norm () 등


시작 코드 세부 정보
hw5_main.m : 메인 코드는 이미지를 읽고 데이터 디렉토리에서 특징점을로드함으로써 시작됩니다. 읽기 및로드 코드는 이미 구현되어 있습니다. 또한 각 스테레오 이미지 쌍에 특징점을 시각화하기위한 코드도 제공했습니다. 이 숙제의 최종 산출물은 불일치지도입니다. 불일치 맵을 얻으려면 다음 기능을 구현하십시오.

bayer_to_rgb_bicubic.m : 우리는 스테레오 알고리즘을 위해 몇 쌍의 이미지를 제공했습니다. 그러나 이미지는 RGGB 베이어 패턴이므로 RGB 색상 이미지로 변환해야합니다. 보간 된 많은 방법이 있지만 여기서는 두 가지 선택을 제공합니다 : 쌍 선형 및 쌍방향 보간법. bilinear and bicubic interpolation.

calculate_fundamental_matrix.m : 지정된 두 세트의 특징점으로부터 정규화 된 8 점 알고리즘을 사용하여 기본 행렬을 찾습니다. 자세한 내용은 보충 폴더를 참조하십시오.

calculate_rectification_matrix.m : 기본 행렬과 특징점 집합을 사용하여 왼쪽 카메라의 호모 그래피 행렬을 찾습니다. 호모 그래피 행렬을 구성하는 g, r, t 행렬을 찾아야합니다. 자세한 내용은 보충 슬라이드를 참조하십시오.

calculate_disparity_map.m : 먼저 비용 볼륨 H x W x D를 만듭니다. 여기서 H는 이미지의 높이, W는 이미지의 너비 및 D는 최대 불일치입니다. 비용 볼륨의 각 요소는 NCC 일치 비용 함수에서 창 크기 3의 값입니다. 최소 비용 값을 선택하기 전에 상자 필터를 사용하여 볼륨을 집계하십시오.


쓰기
프로세스 및 알고리즘을 설명하고, 결과를 보여주고, 추가 크레딧을 기술하고, 관련성이 있다고 느끼는 다른 정보를 알려주십시오. 우리는 LaTeX 템플릿 writeup / writeup.tex를 제공합니다. PDF로 컴파일하여 코드와 함께 제출하십시오.


태스크:

베이어 보간을 구현하는 방법을보고하십시오.
루 브릭 및 엑스트라 크레딧
+15 pts : 바이너리 보간법을 구현하여 RGGB 바이어 이미지에서 RGB 이미지를 얻습니다. (bayer_to_rgb_bicubic.m)
+30 점 : 주어진 2 개의 특징점 집합으로부터 기본 행렬을 구합니다. (calculate_fundamental_matrix.m)
+30 pts : 왼쪽 및 오른쪽 카메라마다 호모 그래피 매트릭스를 찾아 공통 평면에 두 개의 이미지를 투영합니다. (calculate_rectification_matrix.m)
+20 점 : NCC 매칭 비용 기능을 사용하여 비용 볼륨을 만듭니다. (calculate_disparity_map.m)
+ 5 점 : 상자 필터를 사용하여 비용 볼륨을 집계합니다. (calculate_disparity_map.m)

추가 학점
+10 점 : 바이 큐빅 보간법을 구현하여 RGB 이미지를 얻습니다. (bayer_to_rgb_bicubic.m)
+5 pts : SGBM과 같은 다른 방법을 사용하여 향상된 비용 볼륨 집계를 구현합니다. (calculate_disparity_map.m)

노트
호모 그래피 (Hartley)를 사용하여 정교화에 대한 자세한 파생 및 증명을보고 싶다면 Hartley. 1999 년이 도움이 될 것입니다.

바이어 이미지 삽입

데이터 이미지 데이터 \ scene2 \ bayer_cam1.png 또는 data \ scene2 \ bayer_cam2.png와 같은 카메라에서 얻은 원시 이미지 데이터는 베이어 패턴을 갖습니다. 이들 이미지의 각각에있는 픽셀을 교대로 전환하면 다른 색상 강도가 저장됩니다. 바이어 패턴에는 여러 가지 유 형이 있지만 출력 데이터 이미지에는 RGGB 패턴이 있습니다. 빨강, 초록, 초록, 파랑의 이미지 저장 공간에있는 각 2 * 2 창에서 4 개의 픽셀을 의미합니다. 다음 그림은 RGGB Bayer 패턴을 나타냅니다.

Bayer 이미지 보간을 구현하려면 먼저 원시 이미지에서 각 채널을 추출해야합니다.

그런 다음 이미지의 세 채널을 갖게되지만 이미지의 각 채널에는 많은 누락 값이 있습니다. 위의 그림에서 흰색 블록은 각 채널의 누락 픽셀을 의미합니다. R / B 채널의 3/4과 G 채널의 절반이 누락됩니다. 따라서 각 이미지 채널에 대해 보간을 구현해야합니다. 보간법이 많이 있지만 여기에서는 두 가지 선택을 제공합니다 : 쌍 선형 및 쌍방향 보간법. 바이 큐빅 보간을 구현하면 +10 여분의 크레디트를 얻게됩니다.


기본 매트릭스
근본적인 행렬의 정의와 특성을 배웠습니다. 베이어 이미지 보간을 구현 한 후에는 기본 매트릭스를 찾기 위해 8 포인트 알고리즘을 구현해야합니다. 8 점 알고리즘에 대한 세부 사항은 제공된 zip 파일의 보충 슬라이드에 설명되어 있습니다. 이 작업을 구현하기 위해 "Eight Point Algorithm : Implementation"슬라이드 만 공부할 수 있지만 보충 자료의 "Eight Point Algorithm : Proof"슬라이드는 최적화 방법과 8 포인트 알고리즘에 대한 자세한 증명에 관심이있는 경우 유용합니다


스테레오 매칭 및 디스 패리티 맵
H x W x D의 3D 비용 볼륨을 생성하여 시작합니다. 여기서 H는 이미지의 높이이고, W는 이미지의 너비이고 D는 최대 불일치입니다. 그런 다음 (x, y)에있는 블록과 (x + d, y)에있는 블록 사이의 NCC 값을 계산하여 비용 볼륨의 (x, y, d) 값을 채워야합니다. 창 크기를 선택할 수 있습니다. 창 크기가 클수록 시끄러운 결과를 얻지 만 가장자리 출혈이 발생합니다. 성능을 위해 다양한 블록 창의 크기를 테스트하십시오.
초기 비용 볼륨은 블록 일치로 구축됩니다. 그러나 초기 비용 볼륨에는 부정확 한 일치 값으로 인해 많은 노이즈가 포함됩니다. 우리는 비용 볼륨에서 잡음이 많은 값을 제거하여 제거 할 수 있습니다. 비용 집계에 대한 단순한 방법은 상자 필터를 사용하는 것입니다. 마지막 단계는 (x, y)에서 최소 비용 값을 구함으로써 각 픽셀의 불일치를 결정하는 것입니다.

